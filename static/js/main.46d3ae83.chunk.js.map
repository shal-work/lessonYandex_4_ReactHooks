{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","alt","SearchResult","prop","SearchResultList","value","props","React","useState","error","setError","isLoaded","setIsLoaded","items","setItems","count","setCount","useEffect","url","fetch","then","res","json","result","total_count","class","toLocaleString","map","item","href","html_url","target","rel","full_name","description","id","App","handleSubmit","e","preventDefault","name","input","setState","val","state","TaskText","onSubmit","this","placeholder","type","ref","element_","Object","keys","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46d3ae83.chunk.js","sourcesContent":["import React from 'react';\n// import './App.css';\nimport './assets/css/style.css';//src\\assets\\css\\style.css\n\n\nfunction Header() {\n    return (       \n        <header className=\"header\">\n            <img src=\"https://code.s3.yandex.net/web-code/entrance-test/github-logo.svg\" alt = \"\" className=\"header__logo\" />\n            <h1 className=\"header__title\">GitHub Поиск</h1>\n        </header>\n    )\n}\n\nfunction SearchResult(prop) {\n    return (\n        <div className=\"search__result\">\n            <SearchResultList value = {prop.value}/>\n        </div>\n    )\n}\nfunction SearchResultList (props) {\n\n    const [error, setError] = React.useState(null);\n    const [isLoaded, setIsLoaded] = React.useState(false);\n    const [items, setItems] = React.useState([]);\n    const [count, setCount] = React.useState([]);\n\n    React.useEffect(() => {\n        let url = \"https://api.nomoreparties.co/github-search?q=\" + props.value;  \n        fetch(url)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setItems(result.items);\n                    setCount(result.total_count);\n\n                },\n            // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\n            // чтобы не перехватывать исключения из ошибок в самих компонентах.\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n    }, [props.value])\n\n\n        if (error) {\n            return (\n                <>\n                    <img src=\"https://code.s3.yandex.net/web-code/entrance-test/search.svg\" alt=\"\" class=\"search__error-icon\" />\n                    <p class=\"search__error-message\">\n                        Произошла ошибка...\n                    </p>\n                </>\n            )\n        } else if (!isLoaded) {\n            return <div>Загрузка...</div>;\n        } else {\n            return (\n                <> \n                    {count > 0 &&\n                        <>\n                            <h2 className=\"search__findings\">\n                                Найдено <span className=\"search__findings-amount\">{count.toLocaleString('ru-RU')}</span> результатов\n                            </h2>\n                            <ul className=\"search__findings-list\">\n                                {items.map(item => (\n                                    <li className = \"search__finding-item\" key={item.id}>\n                                    <a className=\"search__finding-name\" href={item.html_url} target=\"_blank\" rel=\"noreferrer\">{item.full_name}</a> ;\n                                        <span className=\"search__finding-description\">{item.description}</span>\n                                    </li>\n                                ))}\n                            </ul>\n                        </>\n                    }\n                    {count === 0 &&\n                        <>\n                            <img src=\"https://code.s3.yandex.net/web-code/entrance-test/search.svg\" alt=\"\" className=\"search__error-icon\" />\n                            <p className=\"search__error-message\">\n                                По вашему запросу ничего не найдено, попробуйте уточнить запрос\n                            </p>\n                        </>\n                    }\n                </>\n            );\n        }\n\n}\n\nexport default class App extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {val: ''};\n    }\n\n    handleSubmit = (e) => {\n        if(e) e.preventDefault();\n        const name = this.input.value;\n        this.setState({val: name});\n    }\n\n    render() {\n       return (\n           <>\n                <TaskText/>\n                <Header/>\n                <section className=\"search\">\n                    <form className=\"search__form\" onSubmit={this.handleSubmit}>\n                        <input className=\"search__textfield\"  placeholder=\"Your name\" type=\"text\" ref={(element_) => {this.input = element_ }} />\n                        <button className=\"search__button\">Найти!</button>\n                    </form>\n                    {Object.keys(this.state.val).length  !== 0 &&\n                            <SearchResult value = {this.state.val}/>\n                    }\n                </section>\n           </>\n\n        )\n    }\n}\n\n\nfunction TaskText () {\n    return(\n        <div className=\"content-text\">\n            <p className=\"text-center fz-20 m20 bold\">\n                Входное тестирование Yandex</p>\n            <p className=\"pWidth fz-16\">\n                Тест 4: Формы, взаимодействие с сервером, JSON</p>\n\n            <span className=\"pWidth fz-16 bold\">\n                Задача: </span>\n            <span className=\"pWidth fz-16\">\n                Вам предстоит сделать поисковик, в котором можно искать репозитории в GitHub по их названию. Допишите код в файл task.js, чтобы при нажатии на кнопку «Найти» отправлялся запрос на https://api.nomoreparties.co/github-search?q= и текст поиска, который пользователь ввёл в форму. \n                Добавьте кликабельную ссылку на репозиторий, а под ней разместите краткое описание.\n            </span>\n            <p className= \"mt-20\">\n                <span className=\"pWidth fz-16 bold \">\n                    Решение:             </span>\n                    <span className=\"pWidth fz-16\">\n                        Решение на React с Хуками</span>\n            </p>\n        </div>\n    )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}